_ = 0
h = 0
while h - 10:
 _ = _ + (258 + h * 2 ** 8 + 2 ** 73 + (882 + h * 24) * (2 ** 80 + 0 ** 0 ** (9 - h) * (4 ** 56 + 2 ** 40)) + (15 * 4 ** 56 + 6 * 2 ** 40) * 0 ** 0 ** (9 - h) + 257 * 2 ** 144 + (684743974900 // 20 ** h % 20 + 99) * 4 ** 92) * 256 ** (864 + h * 24)
 h += 1
del h
_ = _ + 1113 * 2 ** 352 + 2 ** 8833 + 69 * 2 ** 292 + 2 ** 262 + 69 * 2 ** 516
h = 0
while _ // 2 ** (40 * 8) % 2 ** 32 + 0 ** h:
 _ = _ + (next(inputStream) - _ // 2 ** (40 * 8) % 2 ** 8) * 2 ** (40 * 8)
 _ = _ + (1 - 3302829851648 // 2 ** (_ // 2 ** (40 * 8) % 2 ** 32) % 2 + 2 ** 32 * 0 ** (_ // 2 ** (56 * 8) % 2 ** 32) - _ // 2 ** (16 * 8) % 2 ** 64) * 2 ** (16 * 8)
 f = 0
 while 0 ** (_ // 2 ** (16 * 8) % 2 ** 64) + 0 ** (_ // 2 ** (40 * 8) % 2 ** 32 - 40) ** 2 - f:
  _ = _ + (1 - _ // 2 ** (8 * 8) % 2 ** 64) * 2 ** (8 * 8)
  g = 0
  while _ // 2 ** (8 * 8) % 2 ** 32 * (_ // 2 ** (56 * 8) % 2 ** 32) * (g - _ // 256 ** (_ // 2 ** (56 * 8) % 2 ** 32 + 1) % 2 ** 32):
   _ = _ + (_ // 256 ** (_ // 2 ** (56 * 8) % 2 ** 32 + g + 5) % 2 ** 8 - _ // 2 ** (4 * 8) % 2 ** 32) * 2 ** (4 * 8)
   _ = _ + (1023 * 2 ** 48 // 2 ** (_ // 2 ** (4 * 8) % 2 ** 32) % 2 + 2 ** 32 * (_ // 2 ** (12 * 8) % 2 ** 32 * 10 + _ // 2 ** (4 * 8) % 2 ** 32 - 48) - _ // 2 ** (8 * 8) % 2 ** 64) * 2 ** (8 * 8)
   g += 1
  del g
  _ = _ + (_ // 2 ** (12 * 8) % 2 ** 32 * 2 ** 8 * 256 ** (_ // 2 ** (44 * 8) % 2 ** 32) + (_ // 2 ** (44 * 8) % 2 ** 32 - _ // 2 ** (56 * 8) % 2 ** 32) * 2 ** (56 * 8) + 5 * 2 ** (44 * 8)) * 0 ** 0 ** (_ // 2 ** (8 * 8) % 2 ** 32 * (_ // 2 ** (56 * 8) % 2 ** 32))
  _ = _ + (2 + _ // 2 ** (56 * 8) % 2 ** 32 * 2 ** 8) * 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8) + (_ // 256 ** (_ // 2 ** (32 * 8) % 2 ** 32) % 2 ** 32 - _ // 2 ** (4 * 8) % 2 ** 32) * 2 ** (4 * 8)
  _ = _ + (_ // 2 ** (44 * 8) % 2 ** 32 - _ // 2 ** (_ // 2 ** (32 * 8) % 2 ** 32 * 8) % 2 ** 64) * 2 ** (_ // 2 ** (32 * 8) % 2 ** 32 * 8) + _ // 2 ** (44 * 8) % 2 ** 32 * 256 ** ((_ // 256 ** (_ // 2 ** (32 * 8) % 2 ** 32 - 4) % 2 ** 32 - 4) * 0 ** (_ // 2 ** (4 * 8) % 2 ** 32) + _ // 2 ** (4 * 8) % 2 ** 32 + 5) + 9 * 2 ** (44 * 8)
  _ = _ + 0 ** (_ // 2 ** (56 * 8) % 2 ** 32) * 4 * 2 ** (32 * 8) - _ // 2 ** (56 * 8) % 2 ** 32 * 2 ** (56 * 8)
  f += 1
 del f
 _ = _ + (256 ** (_ // 2 ** (44 * 8) % 2 ** 32) + (_ // 2 ** (44 * 8) % 2 ** 32 - _ // 2 ** (56 * 8) % 2 ** 32) * 2 ** (56 * 8) + 5 * 2 ** (44 * 8)) * (_ // 2 ** (20 * 8) % 2 ** 32) * (_ // 2 ** (16 * 8) % 2 ** 32)
 _ = _ + (_ // 2 ** (40 * 8) % 2 ** 32 * 256 ** (_ // 2 ** (44 * 8) % 2 ** 32) + 2 ** (44 * 8) + 256 ** (_ // 2 ** (56 * 8) % 2 ** 32 + 1)) * (_ // 2 ** (16 * 8) % 2 ** 32)
 _ = _ - 0 ** (_ // 2 ** (40 * 8) % 2 ** 32 - 41) ** 2 * (_ // 256 ** (_ // 2 ** (32 * 8) % 2 ** 32) % 2 ** 32 * 256 ** (_ // 2 ** (32 * 8) % 2 ** 32) + 4 * 2 ** (32 * 8))
 h += 1
del h
d = 0
while _ // 256 ** (_ // 2 ** (36 * 8) % 2 ** 32 + 5) % 2 ** 32:
 _ = _ + (_ // 256 ** (_ // 2 ** (36 * 8) % 2 ** 32 + 5) % 2 ** 32 - _ // 2 ** (36 * 8) % 2 ** 32) * 2 ** (36 * 8)
 _ = _ + (64 - _ // 2 ** (28 * 8) % 2 ** 32) * 2 ** (28 * 8)
 _ = _ + (2 + 2 ** 8 * 11 + 2 ** 73 + 2 ** 80 * (_ // 256 ** (_ // 2 ** (36 * 8) % 2 ** 32 + 1) % 2 ** 32) - _ // 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8) % 2 ** 144) * 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8) + ((_ // 2 ** (44 * 8) % 2 ** 32 + 9) * (2 ** 32 + 1) - 9 - _ // 2 ** (_ // 2 ** (28 * 8) % 2 ** 32 * 8) % 2 ** 64) * 2 ** (_ // 2 ** (28 * 8) % 2 ** 32 * 8) + 18 * 2 ** (44 * 8)
 f = 0
 while _ // 2 ** (28 * 8) % 2 ** 32 // 64:
  _ = _ + (_ // 2 ** (_ // 2 ** (28 * 8) % 2 ** 32 * 8) % 2 ** 64 - _ // 2 ** (20 * 8) % 2 ** 64) * 2 ** (20 * 8)
  _ = _ + (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32 + 1) % 2 ** 64 * 0 ** 0 ** (_ // 2 ** (20 * 8) % 2 ** 32) - _ // 2 ** (4 * 8) % 2 ** 64) * 2 ** (4 * 8)
  _ = _ + (((_ // 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 5) % 2 ** 32 - _ // 2 ** (4 * 8) % 2 ** 32) * 0 ** 0 ** (_ // 2 ** (4 * 8) % 2 ** 32 // 64) + 2 ** 32 * (_ // 2 ** (24 * 8) % 2 ** 32)) * 256 ** (_ // 2 ** (20 * 8) % 2 ** 32 + 1) - _ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4) % 2 ** 32 * 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4)) * 0 ** 0 ** (_ // 2 ** (4 * 8) % 2 ** 32 * 0 ** (_ // 2 ** (8 * 8) % 2 ** 32) * (0 ** (_ // 2 ** (4 * 8) % 2 ** 32 - 8) ** 2 + 0 ** (_ // 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 1) % 2 ** 32) * (_ // 2 ** (4 * 8) % 2 ** 32 // 64))) + (_ // 2 ** (24 * 8) % 2 ** 32 * 256 ** (_ // 2 ** (8 * 8) % 2 ** 32 + 5) - _ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4) % 2 ** 32 * 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4)) * 0 ** (0 ** (_ // 2 ** (8 * 8) % 2 ** 32) + 0 ** 0 ** (_ // 2 ** (8 * 8) % 2 ** 32) * (_ // 256 ** (_ // 2 ** (8 * 8) % 2 ** 32 + 5) % 2 ** 32) + (_ // 2 ** (4 * 8) % 2 ** 32 - 9) ** 2) + (_ // 2 ** (24 * 8) % 2 ** 32 * 256 ** (_ // 2 ** (20 * 8) % 2 ** 32 + 5) + (_ // 256 ** (_ // 2 ** (24 * 8) % 2 ** 32 + 5) % 2 ** 32 - _ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4) % 2 ** 32) * 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4) - _ // 256 ** (_ // 2 ** (24 * 8) % 2 ** 32 + 5) % 2 ** 32 * 256 ** (_ // 2 ** (24 * 8) % 2 ** 32 + 5)) * 0 ** (_ // 2 ** (4 * 8) % 2 ** 32 - 10) ** 2 * 0 ** (_ // 2 ** (8 * 8) % 2 ** 32)
  _ = _ + (_ // 2 ** (_ // 2 ** (28 * 8) % 2 ** 32 * 8) % 2 ** 64 - _ // 2 ** (20 * 8) % 2 ** 64) * 2 ** (20 * 8)
  n = 0
  while _ // 2 ** (24 * 8) % 2 ** 32 * 0 ** n:
   _ = _ + (_ // 256 ** (_ // 2 ** (24 * 8) % 2 ** 32 + 1) % 2 ** 32 - _ // 2 ** (52 * 8) % 2 ** 32) * 2 ** (52 * 8)
   p = 0
   while 0 ** (1 - _ // 256 ** (_ // 2 ** (52 * 8) % 2 ** 32) % 2 ** 8) ** 2 * 0 ** p:
    e = 0
    while (_ // 2 ** (28 * 8) % 2 ** 32 - 8 * e) // 72 * 0 ** (_ // 2 ** (48 * 8) % 2 ** 32) + 0 ** e:
     _ = _ + (_ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 8 * e - 8) % 2 ** 64 - _ // 2 ** (12 * 8) % 2 ** 64) * 2 ** (12 * 8)
     _ = _ + (_ // 2 ** (12 * 8) % 2 ** 32 * 0 ** 0 ** (_ // 256 ** (_ // 2 ** (12 * 8) % 2 ** 32 + 1) % 2 ** 32 // 64 * 0 ** (_ // 2 ** (16 * 8) % 2 ** 32)) - _ // 2 ** (48 * 8) % 2 ** 32) * 2 ** (48 * 8)
     e += 1
    del e
    _ = _ + (_ // 256 ** (_ // 256 ** (_ // 2 ** (48 * 8) % 2 ** 32 + 1) % 2 ** 32 + 1) % 2 ** 32 + 2 ** 32 * (_ // 256 ** (_ // 2 ** (48 * 8) % 2 ** 32 + 5) % 2 ** 32) - _ // 2 ** (4 * 8) % 2 ** 64) * 2 ** (4 * 8)
    _ = _ + ((2 + 2 ** 8 * (_ // 2 ** (4 * 8) % 2 ** 32) + 2 ** 73 + 2 ** 80 * (_ // 2 ** (8 * 8) % 2 ** 32)) * 256 ** (_ // 2 ** (44 * 8) % 2 ** 32) + ((_ // 2 ** (44 * 8) % 2 ** 32 + 9) * (2 ** 32 + 1) - 9 - _ // 2 ** (4 * 8) % 2 ** 64) * 2 ** (4 * 8) + 18 * 2 ** (44 * 8)) * 0 ** 0 ** (2 - _ // 2 ** (_ // 2 ** (4 * 8) % 2 ** 32 * 8) % 2 ** 8)
    e = 0
    while 0 ** (_ // 2 ** (60 * 8) % 2 ** 32) * (e - 2) + 0 ** e:
     _ = _ + (873 + 2 ** 32 * 864 - _ // 2 ** (4 * 8) % 2 ** 64) * 2 ** (4 * 8) * e
     g = 0
     while _ // 2 ** (4 * 8) % 2 ** 32:
      _ = _ + (_ // 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 5) % 2 ** 32 + 2 ** 32 * (_ // 256 ** (_ // 2 ** (8 * 8) % 2 ** 32 + 5) % 2 ** 32) - _ // 2 ** (4 * 8) % 2 ** 64) * 2 ** (4 * 8) * 0 ** 0 ** g
      _ = _ - _ // 2 ** (4 * 8) % 2 ** 32 * 2 ** (4 * 8) * 0 ** ((_ // 256 ** (_ // 2 ** (52 * 8) % 2 ** 32 + 1) - _ // 256 ** (_ // 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 1) % 2 ** 32 + 1)) % 256 ** (_ // 256 ** (_ // 2 ** (52 * 8) % 2 ** 32 + 1) % 2 ** 32 + 4))
      g += 1
     del g
     _ = _ + (_ // 256 ** (_ // 2 ** (8 * 8) % 2 ** 32 + 1) % 2 ** 32 - _ // 2 ** (60 * 8) % 2 ** 32) * 2 ** (60 * 8)
     e += 1
    del e
    p += 1
   del p
   _ = _ + (_ // 2 ** (52 * 8) % 2 ** 32 - _ // 2 ** (60 * 8) % 2 ** 32) * 0 ** (_ // 256 ** (_ // 2 ** (52 * 8) % 2 ** 32) % 2 ** 8) * 2 ** (60 * 8)
   p = 0
   while (2 - _ // 2 ** (_ // 2 ** (52 * 8) % 2 ** 32 * 8) % 2 ** 8) * 0 ** p:
    h = 0
    while 0 ** 0 ** (_ // 2 ** (40 * 8) % 2 ** 32) * (_ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 5) % 2 ** 32) + 0 ** h:
     _ = _ + (_ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 5) % 2 ** 32 * 0 ** 0 ** h + _ // 2 ** (20 * 8) % 2 ** 32 * 0 ** h - _ // 2 ** (40 * 8) % 2 ** 32) * 2 ** (40 * 8)
     h += 1
    del h
    _ = _ + (2 + _ // 2 ** (60 * 8) % 2 ** 32 * 2 ** 8) * 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8) + _ // 2 ** (44 * 8) % 2 ** 32 * 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 5 + (_ // 2 ** (28 * 8) % 2 ** 32 - 5) * 0 ** (_ // 2 ** (40 * 8) % 2 ** 32)) + 9 * 2 ** (44 * 8)
    _ = _ + (_ // 256 ** (_ // 2 ** (24 * 8) % 2 ** 32 + 5) % 2 ** 32 - _ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4) % 2 ** 32) * 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4)
    p += 1
   del p
   _ = _ + (8 * 2 ** (28 * 8) + _ // 2 ** (52 * 8) % 2 ** 32 * 2 ** 96 * 256 ** (_ // 2 ** (28 * 8) % 2 ** 32)) * 0 ** (2 - _ // 2 ** (_ // 2 ** (52 * 8) % 2 ** 32 * 8) % 2 ** 8)
   n += 1
  del n
  _ = _ + (_ // 2 ** (_ // 2 ** (28 * 8) % 2 ** 32 * 8) % 2 ** 64 - _ // 2 ** (4 * 8) % 2 ** 64) * 2 ** (4 * 8)
  _ = _ + (_ // 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 1) % 2 ** 64 - _ // 2 ** (12 * 8) % 2 ** 64) * 2 ** (12 * 8)
  c = 0
  while 0 ** (_ // 2 ** (8 * 8) % 2 ** 32 + c):
   _ = _ + (_ // 256 ** (_ // 2 ** (16 * 8) % 2 ** 32 + 1) % 2 ** 32 + 2 ** 32 * (_ // 256 ** (_ // 256 ** (_ // 2 ** (16 * 8) % 2 ** 32 + 5) % 2 ** 32 + 1) % 2 ** 32) - _ // 2 ** (20 * 8) % 2 ** 64) * 2 ** (20 * 8)
   p = 0
   while 0 ** (_ // 2 ** (12 * 8) % 2 ** 32 - 11) ** 2 * 0 ** p:
    l = 0
    while (0 ** (2 - _ // 2 ** (_ // 2 ** (20 * 8) % 2 ** 32 * 8) % 2 ** 8) + 0 ** (_ // 2 ** (20 * 8) % 2 ** 32)) * 0 ** l:
     print(chr(40), end='')
     l += 1
    del l
    _ = _ + (_ // 2 ** (20 * 8) % 2 ** 32 - _ // 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8) % 2 ** 32) * 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8)
    _ = _ + (_ // 2 ** (44 * 8) % 2 ** 32 + 4 - _ // 2 ** (32 * 8) % 2 ** 32) * 2 ** (32 * 8)
    h = 0
    while _ // 2 ** (32 * 8) % 2 ** 32 - _ // 2 ** (44 * 8) % 2 ** 32:
     _ = _ + (_ // 2 ** ((_ // 2 ** (32 * 8) % 2 ** 32 - 4) * 8) % 2 ** 32 - _ // 2 ** (40 * 8) % 2 ** 32) * 2 ** (40 * 8)
     l = 0
     while (2 - _ // 2 ** (_ // 2 ** (40 * 8) % 2 ** 32 * 8) % 2 ** 8) * 0 ** l:
      e = 0
      while 0 ** (_ // 2 ** (40 * 8) % 2 ** 32 + e):
       print(chr(41), end='')
       e += 1
      del e
      m = 0
      while _ // 2 ** (40 * 8) % 2 ** 32 * 0 ** m:
       j = 0
       while _ // 2 ** (_ // 2 ** (40 * 8) % 2 ** 32 * 8) % 2 ** 8 * 0 ** j:
        e = 0
        while e - _ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 1) % 2 ** 32:
         print(chr(_ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + e + 5) % 2 ** 8), end='')
         e += 1
        del e
        j += 1
       del j
       j = 0
       while (1 - _ // 2 ** (_ // 2 ** (40 * 8) % 2 ** 32 * 8) % 2 ** 8) * 0 ** j:
        _ = _ + (_ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 1) % 2 ** 32 % 2 ** 31 + _ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 1) % 2 ** 32 // 2 ** 31 - _ // 2 ** (4 * 8) % 2 ** 32) * 2 ** (4 * 8)
        o = 0
        while _ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 1) % 2 ** 32 // 2 ** 31 * 0 ** o:
         print(chr(45), end='')
         o += 1
        del o
        i = 0
        while 10 - i:
         o = 0
         while (_ // 2 ** (4 * 8) % 2 ** 32 // 10 ** (9 - i) + 0 ** (9 - i)) * 0 ** o:
          print(chr(48 + _ // 2 ** (4 * 8) % 2 ** 32 // 10 ** (9 - i) % 10), end='')
          o += 1
         del o
         i += 1
        del i
        j += 1
       del j
       m += 1
      del m
      _ = _ - _ // 2 ** (_ // 2 ** (32 * 8) % 2 ** 32 * 8) % 2 ** 32 * 2 ** (_ // 2 ** (32 * 8) % 2 ** 32 * 8) + -4 * 2 ** (32 * 8)
      m = 0
      while _ // 256 ** (_ // 2 ** (32 * 8) % 2 ** 32 - 4) % 2 ** 32 * 0 ** m:
       print(chr(32), end='')
       m += 1
      del m
      l += 1
     del l
     l = 0
     while 0 ** (2 - _ // 2 ** (_ // 2 ** (40 * 8) % 2 ** 32 * 8) % 2 ** 8) * 0 ** l:
      _ = _ + (_ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 5) % 2 ** 32 + 2 ** 32 * (_ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 1) % 2 ** 32) - _ // 2 ** ((_ // 2 ** (32 * 8) % 2 ** 32 - 4) * 8) % 2 ** 64) * 256 ** (_ // 2 ** (32 * 8) % 2 ** 32 - 4)
      e = 0
      while 0 ** ((2 - _ // 2 ** (_ // 256 ** (_ // 2 ** (32 * 8) % 2 ** 32) % 2 ** 32 * 8) % 2 ** 8) * (_ // 256 ** (_ // 2 ** (32 * 8) % 2 ** 32) % 2 ** 32) + e):
       print(chr(40), end='')
       e += 1
      del e
      _ = _ + 4 * 2 ** (32 * 8)
      l += 1
     del l
     h += 1
    del h
    print(chr(10), end='')
    _ = _ - _ // 2 ** (64 * 8) % 2 ** 64 * 2 ** (64 * 8) + -8 * 2 ** (28 * 8)
    p += 1
   del p
   _ = _ + (_ // 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 5) % 2 ** 32 * 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4) + (12 - _ // 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 1) % 2 ** 64) * 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 1)) * 0 ** (_ // 2 ** (12 * 8) % 2 ** 32 - 7) ** 2
   p = 0
   while 4479 // 2 ** (_ // 2 ** (12 * 8) % 2 ** 32) % 2 * 0 ** p:
    _ = _ + (2 + _ // 2 ** (20 * 8) % 2 ** 64 * 2 ** 8) * 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8)
    _ = _ + (12 // 2 ** (_ // 2 ** (12 * 8) % 2 ** 32) % 2 * (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32 - 7 + 4 * (_ // 2 ** (12 * 8) % 2 ** 32)) % 2 ** 32) + 0 ** (_ // 2 ** (12 * 8) % 2 ** 32 - 1) ** 2 * (_ // 2 ** (44 * 8) % 2 ** 32) - _ // 2 ** (48 * 8) % 2 ** 32) * 2 ** (48 * 8) + 9 * 2 ** (44 * 8)
    r = 0
    while 48 // 2 ** (_ // 2 ** (12 * 8) % 2 ** 32) % 2 * 0 ** r:
     _ = _ + (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32 + 1) % 2 ** 32 + 2 ** 32 * (_ // 256 ** (_ // 2 ** (24 * 8) % 2 ** 32 + 1) % 2 ** 32) - _ // 2 ** (56 * 8) % 2 ** 64) * 2 ** (56 * 8)
     _ = _ + (2 ** 31 + (_ // 2 ** (56 * 8) % 2 ** 32 % 2 ** 31 * (-1) ** (_ // 2 ** (56 * 8) % 2 ** 32 // 2 ** 31) - _ // 2 ** (56 * 8) % 2 ** 32 // 2 ** 31) - (_ // 2 ** (60 * 8) % 2 ** 32 % 2 ** 31 * (-1) ** (_ // 2 ** (60 * 8) % 2 ** 32 // 2 ** 31) - _ // 2 ** (60 * 8) % 2 ** 32 // 2 ** 31) - _ // 2 ** (4 * 8) % 2 ** 32) * 2 ** (4 * 8)
     _ = _ + (_ // 2 ** (12 * 8) % 2 ** 32 // 5 * -(1 // (3 * (_ // 2 ** (4 * 8) % 2 ** 32 - 2 ** 31) + 2)) + 4 // (_ // 2 ** (12 * 8) % 2 ** 32) * ((_ // 2 ** (4 * 8) % 2 ** 32 - 2 ** 31) * (-1) ** (-(1 // (3 * (_ // 2 ** (4 * 8) % 2 ** 32 - 2 ** 31) + 2))) + (2 ** 31 - 1) * -(1 // (3 * (_ // 2 ** (4 * 8) % 2 ** 32 - 2 ** 31) + 2)))) * 256 ** (_ // 2 ** (44 * 8) % 2 ** 32 + 1)
     r += 1
    del r
    r = 0
    while 0 ** (6 - _ // 2 ** (12 * 8) % 2 ** 32) ** 2 * 0 ** r:
     _ = _ + (_ // 2 ** (44 * 8) % 2 ** 32 - _ // 2 ** (32 * 8) % 2 ** 32) * 2 ** (32 * 8)
     g = 0
     while _ // 2 ** (4 * 8) % 2 ** 32 * (_ // 2 ** (32 * 8) % 2 ** 32 // (_ // 2 ** (44 * 8) % 2 ** 32)):
      _ = _ - 0 ** (_ // 2 ** (20 * 8) % 2 ** 32 - _ // 2 ** (24 * 8) % 2 ** 32) ** 2 * (_ // 2 ** (_ // 2 ** (32 * 8) % 2 ** 32 * 8) % 2 ** 64 * 256 ** (_ // 2 ** (32 * 8) % 2 ** 32) + 8 * 2 ** (32 * 8))
      k = 0
      while (_ // 2 ** (20 * 8) % 2 ** 32 - _ // 2 ** (24 * 8) % 2 ** 32) * 0 ** k:
       _ = _ + (0 ** (0 ** (_ // 2 ** (20 * 8) % 2 ** 32) + 0 ** (_ // 2 ** (24 * 8) % 2 ** 32)) * 0 ** (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32) % 2 ** 8 - _ // 256 ** (_ // 2 ** (24 * 8) % 2 ** 32) % 2 ** 8) ** 2 - _ // 2 ** (4 * 8) % 2 ** 32) * 2 ** (4 * 8)
       l = 0
       while _ // 2 ** (4 * 8) % 2 ** 32 * 0 ** l:
        _ = _ + ((0 ** (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32 + 1) % 2 ** 32 - _ // 256 ** (_ // 2 ** (24 * 8) % 2 ** 32 + 1) % 2 ** 32) ** 2 - _ // 2 ** (4 * 8) % 2 ** 32) * 2 ** (4 * 8) - _ // 2 ** (_ // 2 ** (32 * 8) % 2 ** 32 * 8) % 2 ** 64 * 256 ** (_ // 2 ** (32 * 8) % 2 ** 32) - 8 * 2 ** (32 * 8)) * 0 ** (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32) % 2 ** 8)
        m = 0
        while 0 ** (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32) % 2 ** 8 - 1) ** 2 * 0 ** m:
         _ = _ - _ // 2 ** (_ // 2 ** (32 * 8) % 2 ** 32 * 8) % 2 ** 64 * 2 ** (_ // 2 ** (32 * 8) % 2 ** 32 * 8) + -8 * 2 ** (32 * 8) + -0 ** 0 ** ((_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32 + 1) - _ // 256 ** (_ // 2 ** (24 * 8) % 2 ** 32 + 1)) % 256 ** (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32 + 1) % 2 ** 32 + 4)) * 2 ** (4 * 8)
         m += 1
        del m
        _ = _ + ((_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32 + 5) % 2 ** 32 + 2 ** 32 * (_ // 256 ** (_ // 2 ** (24 * 8) % 2 ** 32 + 5) % 2 ** 32) + 2 ** 64 * (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32 + 1) % 2 ** 32) + 2 ** 96 * (_ // 256 ** (_ // 2 ** (24 * 8) % 2 ** 32 + 1) % 2 ** 32) - _ // 2 ** (_ // 2 ** (32 * 8) % 2 ** 32 * 8) % 2 ** 128) * 256 ** (_ // 2 ** (32 * 8) % 2 ** 32) + 8 * 2 ** (32 * 8)) * 0 ** (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32) % 2 ** 8 - 2) ** 2
        l += 1
       del l
       k += 1
      del k
      _ = _ * 0 ** 0 ** (_ // 2 ** (4 * 8) % 2 ** 32) + _ % 256 ** (_ // 2 ** (44 * 8) % 2 ** 32) * 0 ** (_ // 2 ** (4 * 8) % 2 ** 32)
      _ = _ + (_ // 2 ** (_ // 2 ** (32 * 8) % 2 ** 32 * 8) % 2 ** 64 - _ // 2 ** (20 * 8) % 2 ** 64) * 2 ** (20 * 8)
      g += 1
     del g
     _ = _ + 0 ** 0 ** (_ // 2 ** (4 * 8) % 2 ** 32) * 256 ** (_ // 2 ** (44 * 8) % 2 ** 32 + 1)
     r += 1
    del r
    _ = _ + (4352 // 2 ** (_ // 2 ** (12 * 8) % 2 ** 32) % 2 * (_ // 2 ** (20 * 8) % 2 ** 32) + 112 // 2 ** (_ // 2 ** (12 * 8) % 2 ** 32) % 2 * (_ // 2 ** (44 * 8) % 2 ** 32)) * 2 ** (48 * 8) + 5 * 2 ** (44 * 8)
    e = 0
    while _ // 256 ** (_ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32) % 2 ** 32 + 1) % 2 ** 32 // 64 * 0 ** (_ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4) % 2 ** 32) + 0 ** e:
     _ = _ - _ // 2 ** (_ // 2 ** (28 * 8) % 2 ** 32 * 8) % 2 ** 64 * 2 ** (_ // 2 ** (28 * 8) % 2 ** 32 * 8) + -8 * 2 ** (28 * 8)
     e += 1
    del e
    h = 0
    while 0 ** 0 ** (_ // 2 ** (40 * 8) % 2 ** 32) * (_ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 5) % 2 ** 32) + 0 ** h:
     _ = _ + (_ // 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 5) % 2 ** 32 * 0 ** 0 ** h + _ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32) % 2 ** 32 * 0 ** h - _ // 2 ** (40 * 8) % 2 ** 32) * 2 ** (40 * 8)
     h += 1
    del h
    _ = _ + (2 + _ // 2 ** (48 * 8) % 2 ** 32 * 2 ** 8) * 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8) + _ // 2 ** (44 * 8) % 2 ** 32 * 256 ** (_ // 2 ** (40 * 8) % 2 ** 32 + 5 + (_ // 2 ** (28 * 8) % 2 ** 32 - 5) * 0 ** (_ // 2 ** (40 * 8) % 2 ** 32)) + 9 * 2 ** (44 * 8)
    _ = _ + (_ // 256 ** (_ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4) % 2 ** 32 + 5) % 2 ** 32 - _ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4) % 2 ** 32) * 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 4)
    p += 1
   del p
   p = 0
   while 0 ** (_ // 2 ** (12 * 8) % 2 ** 32 - 9) ** 2 * 0 ** p:
    _ = _ + (_ // 256 ** (_ // 256 ** (_ // 256 ** (_ // 2 ** (16 * 8) % 2 ** 32 + 5) % 2 ** 32 + 5) % 2 ** 32 + 1) % 2 ** 32 - _ // 2 ** (48 * 8) % 2 ** 32) * 2 ** (48 * 8)
    _ = _ + (_ // 2 ** (24 * 8) % 2 ** 32 - _ // 2 ** (48 * 8) % 2 ** 32) * 0 ** 0 ** (_ // 2 ** (20 * 8) % 2 ** 32 * (_ // 256 ** (_ // 2 ** (20 * 8) % 2 ** 32) % 2 ** 40)) * 2 ** (48 * 8)
    _ = _ + ((_ // 2 ** (_ // 2 ** (28 * 8) % 2 ** 32 * 8) % 2 ** 64 - _ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 8) % 2 ** 128) * 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 8) - 8 * 2 ** (28 * 8)) * 0 ** (0 ** 0 ** (_ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 8) % 2 ** 32) * (_ // 256 ** (_ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 8) % 2 ** 32 + 1) % 2 ** 32) - 12) ** 2
    _ = _ + (12 - _ // 2 ** ((_ // 2 ** (4 * 8) % 2 ** 32 + 1) * 8) % 2 ** 64) * 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 1) + (2 + _ // 2 ** (48 * 8) % 2 ** 32 * 2 ** 8) * 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8) + _ // 2 ** (44 * 8) % 2 ** 32 * 2 ** ((_ // 2 ** (28 * 8) % 2 ** 32 + 4) * 8) + 9 * 2 ** (44 * 8)
    p += 1
   del p
   s = 0
   while 0 ** (_ // 2 ** (12 * 8) % 2 ** 32 - 10) ** 2 * 0 ** s:
    h = 0
    while _ // 256 ** (_ // 2 ** (56 * 8) % 2 ** 32 + 5) % 2 ** 32 + 0 ** h:
     _ = _ + ((_ // 256 ** (_ // 2 ** (56 * 8) % 2 ** 32 + 5) % 2 ** 32 + 2 ** 32 * (_ // 256 ** (_ // 2 ** (60 * 8) % 2 ** 32 + 5) % 2 ** 32)) * 0 ** 0 ** h + 3710851744617 * 0 ** h - _ // 2 ** (56 * 8) % 2 ** 64) * 2 ** (56 * 8)
     h += 1
    del h
    _ = _ + (2 + 2 ** 8 * (_ // 2 ** (20 * 8) % 2 ** 32) + 2 ** 73 + 2 ** 80 * (_ // 2 ** (24 * 8) % 2 ** 32) - _ // 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8) % 2 ** 144) * 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8) + (_ // 2 ** (44 * 8) % 2 ** 32 + 9) * 256 ** (_ // 2 ** (60 * 8) % 2 ** 32 + 5) + _ // 2 ** (44 * 8) % 2 ** 32 * 256 ** (_ // 2 ** (56 * 8) % 2 ** 32 + 5) + 18 * 2 ** (44 * 8)
    _ = _ + (12 - _ // 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 1) % 2 ** 32) * 256 ** (_ // 2 ** (4 * 8) % 2 ** 32 + 1) - _ // 2 ** ((_ // 2 ** (16 * 8) % 2 ** 32 + 5) * 8) % 2 ** 32 * 2 ** ((_ // 2 ** (16 * 8) % 2 ** 32 + 5) * 8)
    s += 1
   del s
   p = 0
   while _ // 2 ** (12 * 8) % 2 ** 32 // 64 * 0 ** p:
    _ = _ + ((_ // 2 ** (_ // 2 ** (28 * 8) % 2 ** 32 * 8) % 2 ** 64 - _ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 16) % 2 ** 192) * 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 16) - 16 * 2 ** (28 * 8)) * 0 ** 0 ** (0 ** 0 ** (_ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 16) % 2 ** 32) * (_ // 256 ** (_ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 16) % 2 ** 32 + 1) % 2 ** 32) // 64 * 0 ** (12 - 0 ** 0 ** (_ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 8) % 2 ** 32) * (_ // 256 ** (_ // 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 - 8) % 2 ** 32 + 1) % 2 ** 32)) ** 2)
    _ = _ + (_ // 2 ** (44 * 8) % 2 ** 32 + _ // 256 ** (_ // 2 ** (12 * 8) % 2 ** 32 + 5) % 2 ** 32 * 2 ** 32) * 256 ** (_ // 2 ** (28 * 8) % 2 ** 32 + 8) + (2 + 12 * 2 ** 8) * 2 ** (_ // 2 ** (44 * 8) % 2 ** 32 * 8) + (_ // 2 ** (44 * 8) % 2 ** 32 - _ // 2 ** (48 * 8) % 2 ** 32) * 2 ** (48 * 8) + 9 * 2 ** (44 * 8) + 8 * 2 ** (28 * 8)
    p += 1
   del p
   c += 1
  del c
  f += 1
 del f
 d += 1
del d
